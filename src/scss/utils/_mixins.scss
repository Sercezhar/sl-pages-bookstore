@mixin bg-cover {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-truncate-multi-line($lines: 3) {
  display: -webkit-box;
  overflow: hidden;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $lines;
}

@mixin text-gradient($gradient) {
  background: $gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

@mixin adaptiveValue(
  $property,
  $startSize,
  $minSize,
  $widthFrom: $maxWidthContainer,
  $widthTo: $minWidth,
  $keepSize: 0
) {
  $addSize: math.div($startSize - $minSize, 16);

  @if ($widthFrom == $maxWidthContainer and $maxWidthContent == 0) {
    $widthFrom: $maxWidth;
  }
  @if ($minSize <= 0) {
    $minSize: 0.0001;
  }
  @if ($startSize <= 0) {
    $startSize: 0.0001;
  }

  $widthFromMedia: em($widthFrom);
  $widthToMedia: em($widthTo);

  $slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));
  $yIntersection: -$widthTo * $slope + $minSize;
  $flyValue: #{rem($yIntersection)}' + ' #{$slope * 100}vw;

  $propertyValue: #{'clamp(' rem($minSize) ',' $flyValue ',' rem($startSize) ')'};

  @if ($minSize > $startSize) {
    $propertyValue: #{'clamp('
      rem($startSize)
      ','
      $flyValue
      ','
      rem($minSize)
      ')'};
  }

  @if $widthFrom ==
    $maxWidthContainer or
    $widthFrom ==
    $maxWidth or
    $keepSize ==
    1 or
    $keepSize ==
    2
  {
    @media (min-width: $widthFromMedia) {
      #{$property}: rem($startSize);
    }
  }
  @media (min-width: $widthToMedia) and (max-width: $widthFromMedia) {
    @supports (#{$property}: $propertyValue) {
      #{$property}: $propertyValue;
    }

    @supports not (#{$property}: $propertyValue) {
      #{$property}: calc(
        #{rem($minSize)} + #{$addSize} * (100vw - #{rem($widthTo)}) / #{math.div(
            $widthFrom,
            16
          ) - math.div($widthTo, 16)}
      );
    }
  }
  @if $widthTo == $minWidth or $keepSize == 1 or $keepSize == 3 {
    @media (max-width: $widthToMedia) {
      #{$property}: rem($minSize);
    }
  }
}
